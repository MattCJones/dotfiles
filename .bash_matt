###############################
# Constants
###############################
export USER="${USER:-`whoami`}"
export WHOME="${WHOME:-/mnt/c/Users/$USER}"

###############################
# Aliases
###############################
#- Bash utilities
alias me="echo `whoami`@`hostname` `hostname -I`"
alias myip="ifconfig 2>/dev/null | grep 'inet .*\([0-9][0-9][0-9]\.[0-9][0-9][0-9]\.[0-9][0-9][0-9]\.[0-9]*\)' | xargs | cut -d ' ' -f2"
alias ls="ls --color"
alias ld="ls -d */"
alias lda="ls -d -a */"
alias ll="ls -AltF"
alias la="ls -A"
alias l="ls -CF"
alias lsp="showFullPath"  # show pull path
alias lsd="ls -d */"  # show only directories
alias hist="history"
alias ag="ag --color-path '0;35' --color-line-number '0;32' --color-match '1;31'"
alias grep="grep -E --color --exclude-dir='{.git,__pycache__}'"
alias agrep="alias | grep"
alias allgrep="_allgrep"
alias md="mkdir"
alias mdp="mkdir -p"
alias rd="rmdir"
alias cpr="cp -r"
alias rmr="rm -r"
alias rmrf="rm -rf"
alias rml="removeSymLinksInDir"  # remove symbolic links in a directory
alias s="ls"
alias sl="ls"
alias lns="ln -s"
alias copy="clip.exe"  # `<bash_output> | copy` to copy to Windows clipboard
alias Grep="_Grep"  # call more complicated grep function
alias Find="_Find"  # call more complicated find function
alias Sed="_Sed"    # call more complicated sed function

#- Movement
alias ~="cd ~"
alias ~~="cd $WHOME"
alias dotvim="cd ~/.vim"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias .......="cd ../../../../../.."
alias .......l="cd ../../../../../..; ls"
alias ......l="cd ../../../../..; ls"
alias .....l="cd ../../../..; ls"
alias ....l="cd ../../..; ls"
alias ...l="cd ../..; ls"
alias ..l="cd ..; ls"
alias cdl="cdThenLs"      # change directory and run ls command
alias cdn="cdNewestDir"   # change to newest director
alias cdo="cdOldestDir"   # change to oldest director
alias cdw="cdWindowsDir"  # change to C:\\Windows\style\path\directory
alias sd="saveDir "       # save a directory to a var; call that var to cd

#- Software
#- OpenFOAM
alias Wmake="wclean; wmake 2>&1 | tee log.wmake"  # OpenFOAM wmake
alias WmakeLib="wclean; wmake libso 2>&1 | tee log.wmake"  # OpenFOAM wmake
alias touchFoam="touch ${PWD##*/}.foam"
#- Paraview
alias pv="touch foam.foam && paraview --data=foam.foam"
#- Ipython
alias ipy="ipython --pylab --profile=matt"
#- Tarballing
alias extractAll="extractFromCompressedFile"
alias tarx="tar -xvzf"
alias tarc="tarBallCompress"
alias dus="du -Psckxh * | sort -h"
#- Vim
alias vi="vim"
alias vin="vim -N -u NONE"  # set :finish at breakpoints in vimrc when debugging
alias vip="vim -"  # pipe output into Vim
alias vinop="vim --noplugins"
alias vir="vim -RmM"  # readonly mode
alias vrc="vim ~/.vim/vimrc"
alias vrcp="vim ~/.vim/vimrc_plugins"
alias vrcm="vim ~/.vim/vimrc_more"
alias vrco="vim ~/.vim/vimrc_openfoam"
alias vrcl="vim ~/.vim/vimrc_local"
alias vimProfile="vim --cmd 'profile start vimrc_profile' --cmd 'profile! file ~/.vim/vimrc'"
alias vimStartupTime="vim --startuptime /tmp/startup.log +q && vim /tmp/startup.log"
alias vis="vim -u NONE -N -s"
alias vil="vim -S ~/.vim/lastSession.vim"
alias vic="vimCommandFromFile"  # run vim command from a file
alias vmore="vim -u ~/.vim/vimrc_more"
alias vmo="vmore"
alias viToHTML='vim -c TOhtml -c wqa'
alias vgif='vimgif'
alias magit="vim -c MagitOnly"
#- Latexmk
alias lmk="latexmk -pdf -pvc -lualatex"
#- Git
alias g="git status"
alias gs="git status"
alias gif="git diff"
alias gifc="git diff --cached"  # cached for commit
alias giff="git diff --cached"  # cached for commit
alias gad="git add"
alias gca="git commit --amend -C HEAD"
alias gcap="git commit --amend -C HEAD; git push -f"
alias gammend="git commit --amend -C HEAD"
alias grm="gitRemove"
alias grmr="gitRemoveRecursive"
alias gf="gitFiles"
alias gfc="gitFilesCached"
alias gff="gitFilesCached"
#- Other
alias pyProfile="python -m cProfile"  # profile Python code

#- Configuration files
alias tco="vim ~/.tmux.conf"
alias brc="vim ~/.bashrc"
alias bpr="vim ~/.bash_profile"
alias bal="vim ~/.bash_aliases"
alias bma="vim ~/.bash_matt"
alias blo="vim ~/.bash_local"
alias zrc="vim ~/.zshrc"
alias zma="vim ~/.zsh_matt"
alias frc="vim ~/.config/fish/config.fish"
alias sbrc="source ~/.bashrc"
alias sbpr="source ~/.bash_profile"
alias sbal="source ~/.bash_aliases"
alias sbma="source ~/.bash_matt"
alias sblo="source ~/.bash_local"
alias szrc="source ~/.zshrc"
alias szma="source ~/.zsh_matt"
alias sfrc="source ~/.config/figh/config.fish"
alias sfoam="source $WM_PROJECT_DIR/bin/tools/RunFunctions; source $WM_PROJECT_DIR/bin/tools/CleanFunctions"
alias todo="vim ~/TODO.md"

# Constants and movement
export DOCUMENTS="$WHOME/Documents"; alias documents="cd $DOCUMENTS"
export DOWNLOADS="$WHOME/Downloads"; alias downloads="cd $DOWNLOADS"

################################
# Functions
################################
function showFullPath {
    #- Show the full path to a set of files from ls
    if [[ -z $1 ]]; then  # if input is not given
        ls -d -1 $PWD/*
    else
        for f in "$@"; do
            ls -d -1 $PWD/$f
        done
    fi
}

function _allgrep {
    #- Search all settings: alias, env, and set
    alias | grep $1
    env | grep $1
    set | grep $1
    type $1
}

function removeSymLinksInDir {
    #- Remove symbolic links in the input directory (default .)
    dir=".";
    if [ ! -z "$1" ]; then  # if dir is not empty
        dir="$1"
    fi
    find $dir -maxdepth 1 -type l -exec rm {} \;
}

function _Grep {
    #- Fill out commonly used grep options
    searchStr="$1"
    shift
    cmd="grep -rnE --exclude-dir='.git' $@ $searchStr"
    echo $cmd
    eval $cmd
}

function _Find {
    #- Fill out commonly used find options
    searchStr="$1"
    shift
    cmd="find . -regextype posix-extended -name $searchStr $@"
    echo $cmd
    eval $cmd
}

function _Sed {
    #- Fill out commonly used sed options
    #- sed -r -i'' -f * -e "s/cat[s]?/dog[s]?/"
    searchStr="$1"
    shift
    cmd="sed -r -i'' $@ -e $searchStr"
    echo $cmd
    eval $cmd
}

function cdThenLs {
    #- Help with cd ls; cd ls; cd ls; etc...
    cd $1
    ls -G;
}

function cdNewestDir {
    #- Move into the most recently-modified directory
    cd "$(\ls -1dt ./*/ | head -n 1)";
}

function cdOldestDir {
    #- Move into the least recently-modified directory
    cd "$(\ls -1dt ./*/ | tail -n 1)";
}

function cdWindowsDir {
    #- Move into a C:\\Windows\style\path\directory 
    windir=$1
    lindir=`wslpath $windir`
    cd $lindir
}

function saveDir {
    #- Save a directory as an alias for later
    eval "alias $1='cd $PWD'";
}

function sbatchAllInDir {
    #- Submit jobs in all base level subdirectories of input directory
    inDir=$1
    runFile=$2
    if [ -z "$inDir" ]; then
        echo "Error! No target directory. Exiting."
        return
    fi
    if [ -z "$runFile" ]; then
        runFile="run.sh"
    fi
    echo "Running jobs in $inDir"
    for dir in $inDir/*/; do  # loop through base level subdirectories
        cd $dir
        if [ -f "$runFile" ]; then
            cmd="sbatch $runFile"
            echo && echo $cmd && eval $cmd
        fi
        cd - > /dev/null
    done
}

function tarBallCompress {
    #- Conveniently tarball a directory
    tar -cvzf $1.tgz $1
}

function gitRemove {
    #- Remove and git remove
    rm $1
    git rm $1
}

function gitRemoveRecursive {
    #- Remove and git remove
    rm -r $1
    git rm -r $1
}

#- Function to run optionset.py utility with bash completion
function os { optionset.py "$@" --bash-completion; source ~/.optionset/bash_completion; }

#- View manual with Vim
function vman {
    #- Vman - https://github.com/jez/vim-superman
    vim -c "set scrolloff=999|SuperMan $*"
    if [ "$?" != "0" ]; then
        echo "No manual entry for $*"
    fi
}

#- Edit changed files with Vim
function gitFiles { git diff --name-only | uniq; }
function gitFilesCached { git diff --cached --name-only | uniq; }

#- Create a new directory and enter it
mkd() {
        mkdir -p "$@"
        cd "$@" || exit
}

#- Extract from compressed file
extractFromCompressedFile() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1                  ;;
            *.tar.gz)    tar xvzf $1                  ;;
            *.bz2)       bunzip2 $1                   ;;
            *.rar)       unrar x $1                   ;;
            *.gz)        gunzip $1                    ;;
            *.tar)       tar xvf $1                   ;;
            *.tbz2)      tar xvjf $1                  ;;
            *.tgz)       tar xvzf $1                  ;;
            *.zip)       unzip $1                     ;;
            *.Z)         uncompress $1                ;;
            *.7z)        7z x $1                      ;;
            *)           echo "can't extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

#- Finds x newest files recursively in a directory - only non-hidden stuff
newestFiles() {
    # $1 - number of files to find
    if [ $# -eq 1 ]; then
        N=$1
    else
        N=5
    fi
    find . -type f \( ! -regex '.*/\..*' \) -print0 | xargs -0 stat -c "%Y:%n"\
        | sort -n| tail -n "$N" | cut -d ':' -f2-
}

#- Basic calculations, e.g. calc 2/3-1.2, optional significant figures as $2
calc() {
    if [ -z "$2" ]; then
        scale_=5  # default significant figures
    else
        scale_=$2
    fi
    echo "scale=$scale_;$1" | bc;
}

###############################
# Settings
###############################
# Set custom directory colors in .dircolors
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi
if [ -n "$BASH_VERSION" ]; then  # if running bash
    #- Set command-line prompt
    export PS1="\[\e[0;33m\][\t]\[\e[0;36m\][\!]\[\e[0;32m\]\u@\h\[\e[00m\]:\[\e[1;34m\]\W\[\e[0;00m\]\$ "

    #- History Customization
    export HISTFILESIZE=0
    export HISTSIZE=1000
    export HISTCONTROL=ignoreboth  # ignore white space lines and duplicates
    shopt -s histappend  # append to history file - don"t overwrite

    #- Use extended globs
    shopt -s extglob  # use ?(list), *(list), +(list), @(list) !(list)

    #- Properly expand $VAR/path
    shopt -s direxpand

    #- Disable Ctrl-s stopping terminal
    stty -ixon

    #- Make 'less' and 'man' use colors
    export LESS_TERMCAP_mb=$'\e[1;32m'
    export LESS_TERMCAP_md=$'\e[1;32m'
    export LESS_TERMCAP_me=$'\e[0m'
    export LESS_TERMCAP_se=$'\e[0m'
    export LESS_TERMCAP_so=$'\e[01;33m'
    export LESS_TERMCAP_ue=$'\e[0m'
    export LESS_TERMCAP_us=$'\e[1;4;31m'

fi
